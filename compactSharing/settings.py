"""
Django settings for compactSharing project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
from dotenv import load_dotenv ; load_dotenv()
import os
SECRET_KEY = os.environ["DJANGO_SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True if os.environ.get('DEBUG') == 'True' else False


CUSTOM_URL = list(filter(lambda url: url is not None and len(url) > 0, 
    [
        os.environ.get("URL_main"),
        os.environ.get("URL_backup"),
    ]
))

ALLOWED_HOSTS = [
    *CUSTOM_URL
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # CRONTAB
    'django_celery_beat',

    # USR APP
    'assets',
    'localutils',
    'globalfiles',

    'customauth',
    'lightfileshare',

    # DEP REQ
    'whitenoise',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'compactSharing.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'compactSharing.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

if os.environ["USE_SQLITE"]:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.environ["DB_NAME"],
            'USER': os.environ["DB_USER"],
            'PASSWORD': os.environ["DB_PASS"],
            'HOST': os.environ.get("DB_HOST", "127.0.0.1"),
            'PORT': os.environ.get("DB_PORT", ""),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


STATIC_ROOT = BASE_DIR / 'globalfiles/static/'
STATIC_URL = '/globalfiles/static/'

MEDIA_ROOT = BASE_DIR / 'globalfiles/media/'
MEDIA_URL = '/globalfiles/media/'

LIGHTFILE_SAVE_DIR = 'lightfile/shared/'
LIGHTFILE_LOAD_URL = '/globalfiles/lightfileshared/'

LOGIN_URL = '/customauth/login/'
LOGOUT_REDIRECT_URL = "/"

APPEND_SLASH = True

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SESSION_COOKIE_SECURE = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 60 * 60 # last 1 hour and expires if browser not closed

CSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'
CSRF_USE_SESSIONS = True
CSRF_COOKIE_SECURE = True

CSRF_TRUSTED_ORIGINS = [
    protocol + domain
    for protocol in ('http://', 'https://', )
    for domain in CUSTOM_URL
]


FILE_UPLOAD_HANDLER = [
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler",
]



SALT_BYTE = 32
SALT_SEP = '::'

USE_PRIFILES = True if os.environ.get('USE_PRIFILES') == 'True' else False

MY_DEFAULT_FILE_LIFETIME_IN_HOUR = 12

# deprecated
# from localutils.permission_handler import PermissionHandler
# MY_ACCESS_PERMISSION_HANDLER = PermissionHandler(permission_lifetime_in_minute=0.05) # permission only last for 3 seconds

AUTH_USER_MODEL = "customauth.CustomUser"

from localutils.permission_handler import FilePermissionHandler
MY_FILE_PERMISSION_HANDLER = FilePermissionHandler()

